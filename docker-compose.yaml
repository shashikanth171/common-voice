version: '3'
services:
  db:
    image: mysql:5.7.41
    networks:
      - voice-web
    container_name: db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=voiceweb
      - MYSQL_USER=voicecommons
      - MYSQL_PASSWORD=voicecommons
      - MYSQL_ROOT_PASSWORD=voicewebroot
    command: mysqld --sql_mode="STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"
    ports:
      - 3306:3306
    volumes:
      - db-data:/var/lib/mysql
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - voice-web
  storage:
    image: fsouza/fake-gcs-server
    container_name: storage
    ports:
      - 8080:8080
    networks:
      - voice-web
    command:
      [
        '-scheme',
        'http',
        '-port',
        '8080',
        '-external-url',
        'http://storage:8080',
        '-backend',
        'filesystem',
      ]
    volumes:
      - storage-data:/data
  bundler:
    build:
      context: ./bundler
      dockerfile: Dockerfile
    container_name: bundler
    links:
      - db
      - redis
      - storage
    volumes:
      - bundler-data:/home/node/code
    networks:
      - voice-web
    ports:
      - 9001:9001
    command: bash -c "npm ci && npm run build && npm start"
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: web
    links:
      - db
      - redis
      - storage
    volumes:
      - web-data:/code
    environment:
      - DOTENV_CONFIG_PATH=/code/.env-local-docker
    networks:
      - voice-web
    ports:
      - 9000:9000
    command: bash -c "/code/docker/wait-for-it.sh storage:8080 -- /code/docker/prepare_storage.sh && yarn && yarn start"

networks:
  voice-web:

volumes:
  web-data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: ../voice.swecha.org-data/web_data
      o: bind
  storage-data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: ../voice.swecha.org-data/storage_data
      o: bind
  bundler-data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: ./bundler
      o: bind
  db-data:
    driver: local # Define the driver and options under the volume name
    driver_opts:
      type: none
      device: ../voice.swecha.org-data/db_data
      o: bind
